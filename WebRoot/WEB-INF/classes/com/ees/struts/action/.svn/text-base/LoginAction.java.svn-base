/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ees.struts.action;

import java.util.List;

import javax.persistence.Entity;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ees.hibernate.*;
import com.ees.struts.form.LoginForm;

/**
 * MyEclipse Struts Creation date: 12-05-2011
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/login" name="loginForm" input="/form/login.jsp"
 *                scope="request" validate="true"
 */
@Entity
public class LoginAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		LoginForm loginForm = (LoginForm) form;
		
		List list = null;
		switch (Integer.parseInt(loginForm.getSelectType())) {
		case 1:
			Student student = new Student();
			StudentDAO studentDAO = new StudentDAO();
			student.setSid(loginForm.getName());
			student.setPassword(loginForm.getPassword());
			
			System.out.println("logintype:"+Integer.parseInt(loginForm.getSelectType()));
			
			list = studentDAO.findByExample(student);
			if (list != null && !list.isEmpty()) {
				request.getSession().setAttribute("sname", loginForm.getName());
				request.getSession().setAttribute("ID",
						((Student) list.get(0)).getSid());
				request.getSession().setAttribute("role",
						loginForm.getSelectType());
				return mapping.findForward("loginSuccess");
			}

		case 2:
			Teacher teacher = new Teacher();
			TeacherDAO teacherDAO = new TeacherDAO();
			teacher.setTid(loginForm.getName());
			teacher.setPassword(loginForm.getPassword());
			
			System.out.println("logintype:"+Integer.parseInt(loginForm.getSelectType()));
//			list = teacherDAO.findByExample(teacher);
			list = teacherDAO.findTeacher(loginForm.getName(), loginForm.getPassword());
			String tname=list.get(0).toString();
			if (list != null && !list.isEmpty()) {
				request.getSession().setAttribute("tname", tname);
				request.getSession().setAttribute("ID",
						loginForm.getName());
				request.getSession().setAttribute("role",
						loginForm.getSelectType());
				return mapping.findForward("loginSuccess");
			}

		case 3:
			Administrator administrator = new Administrator();
			AdministratorDAO administratorDAO = new AdministratorDAO();
			administrator.setName(loginForm.getName());
			administrator.setPassword(loginForm.getPassword());
			
			System.out.println("logintype:"+Integer.parseInt(loginForm.getSelectType()));
			list = administratorDAO.findByExample(administrator);
			if (list != null && !list.isEmpty()) {
				request.getSession().setAttribute("aname", loginForm.getName());
				request.getSession().setAttribute("ID",
						((Administrator) list.get(0)).getId());
				request.getSession().setAttribute("role",
						loginForm.getSelectType());
				return mapping.findForward("loginSuccess");
			}
			
		default:
			return mapping.findForward("reLgoin");
		}
	}
}